{
  "name": "grunt-jade-usemin",
  "version": "0.2.14",
  "description": "Grunt plugin for running UseMin on Jade files",
  "homepage": "https://github.com/pgilad/grunt-jade-usemin",
  "bugs": {
    "url": "https://github.com/pgilad/grunt-jade-usemin/issues"
  },
  "author": {
    "name": "Gilad Peleg",
    "email": "giladp007@gmail.com"
  },
  "keywords": [
    "gruntplugin",
    "jade",
    "usemin",
    "build",
    "minify"
  ],
  "main": "Gruntfile.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/pgilad/grunt-jade-usemin.git"
  },
  "licenses": [
    {
      "type": "MIT"
    }
  ],
  "devDependencies": {
    "grunt-contrib-jshint": "~0.8.0",
    "grunt-contrib-nodeunit": "~0.3.2",
    "grunt-contrib-clean": "~0.5.0",
    "load-grunt-tasks": "^0.4.0",
    "jshint-stylish": "~0.1.5",
    "grunt-dev-update": "^0.5.2"
  },
  "peerDependencies": {
    "grunt": "~0.4.1"
  },
  "scripts": {
    "test": "grunt test"
  },
  "dependencies": {
    "lodash": "~2.4.1",
    "grunt-contrib-concat": "^0.3.0",
    "grunt-contrib-uglify": "^0.4.0",
    "grunt-contrib-cssmin": "^0.9.0"
  },
  "readme": "# [grunt](http://gruntjs.com/)-jade-usemin\n> Grunt plugin for processing jade files and building production js & css files\n\n[![NPM Version](http://img.shields.io/npm/v/grunt-jade-usemin.svg)](https://npmjs.org/package/grunt-jade-usemin)\n[![Gittip](http://img.shields.io/gittip/pgilad.svg)](https://www.gittip.com/pgilad/)\n[![Dependencies](http://img.shields.io/gemnasium/pgilad/grunt-jade-usemin.svg)](https://gemnasium.com/pgilad/grunt-jade-usemin)\n[![Built with Grunt](https://cdn.gruntjs.com/builtwith.png)](http://gruntjs.com/)\n\n## Getting Started\nThis plugin requires Grunt.\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-jade-usemin --save-dev\n```\n\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-jade-usemin');\n```\n\n## The \"jadeUsemin\" task\n\nThis project is based on the [grunt-usemin](https://github.com/yeoman/grunt-usemin) Project.\n`grunt-jade-usemin` is meant to be an assisting tool in preparing projects for build.\nThe plugin will scan the parsed `.jade` files and extract the scripts from them.\n\nThose scripts are then concated and minified into a single minified file.\njadeUsemin currently supports 2 types of `sources` to concat & minify: `js` and `css`.\n\n### How to use in a Jade file\n\nThis is most effectively used in conjunction with the environment variable in express\ni.e `process.env` or `node env`.\n\n**jadeUsemin** simply scans for the following line: `<!-- build:<type> <target -->`.\nWhere `<target>` can be either `js` or `css`.\n\n**jadeUsemin** then adds the scripts/styles inside the lines until it meets the closing line:\n`<!-- endbuild -->` Which signifies the end of a usemin target.\n\n##### for the following to work, you need to expose your `env` variable when rendering the jade file.\nThis is an example `index.jade`:\n\n```jade\nif env === 'development'\n    //-<!-- build:js test/compiled/compiled.min.js -->\n    script(src='/test/fixtures/script1.js')\n    script(src='/test/fixtures/script2.js')\n    //-<!-- endbuild -->\nelse\n    script(src='/test/compiled/compiled.min.js')\n```\n\nRunning `**jadeUsemin**` on this file will concat & uglify the script files `script1.js` and `script2.js`\ninto a minified file `compiled.min.js`.\n\nAnother example is using **jadeUsemin** with css files:\n```jade\n//-<!-- build:css test/compiled/style.min.css -->\nlink(rel='stylesheet', href='/test/fixtures/style1.css')\nlink(rel='stylesheet', href='/test/fixtures/style2.css')\n//-<!-- endbuild -->\n```\n\njadeUsemin will create a minified css file called style.min.css which is a concated and minified version of both styles.\n\n### Available Options\n\n##### Uglify\n`{Boolean} [uglify=true]` Whether grunt-contrib-uglify should be run on JS files as well as concat.\nSpecifying false will only concat the src js that are found.\nAnything else will default to true, which will also uglify the js files.\n\n##### Prefix\n`{String} [prefix='']` This adds some flexibility to where you keep your public folder. It\nallows you to add a prefix to the path.\n\n##### replacePath\n`{Object} [default={}]` This option allows you to specify interpolation patterns for the source and build paths of your js/css.\nEach key value you specify here will be interpolated in the src paths that the plugin finds.\nFor example if you add: `'#{env}': 'dist'` then all occurances of `#{env}` in src paths will be replaced with `dist`.\nThis gives you the power to change the paths according to different working enviornments.\n\n### Gruntfile.js basic task\nIn your project's Gruntfile, add a section named `jadeUsemin` to the data object passed into `grunt.initConfig()`.\n\n```js\ngrunt.initConfig({\n  jadeUsemin: {\n    main: {\n      options: {\n        uglify: true, //optional - whether to run uglify js besides concat [default=true]\n        prefix: '', //optional - add prefix to the path [default='']\n        replacePath: {\n            '#{env}': 'dist' //optional - key value to replace in src path\n        }\n      },\n      files: {\n        src: ['src/index.jade', 'src/index2.jade']\n      }\n    }\n  },\n})\n```\n\n### Usage Examples\n\n#### Default Options\n\n```js\ngrunt.initConfig({\n  jadeUsemin: {\n    main: {\n      options: {\n        uglify:true\n      },\n      files: {\n        src: ['src/testing', 'src/123'],\n      }\n    }\n  },\n})\n```\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\n\n## License\nCopyright (c) 2014 Gilad Peleg. Licensed under the MIT license.\n",
  "readmeFilename": "README.md",
  "_id": "grunt-jade-usemin@0.2.14",
  "_from": "grunt-jade-usemin@"
}
